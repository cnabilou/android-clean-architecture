allprojects {
    repositories {
        jcenter()
    }
}

ext {
    // Android
    androidBuildToolsVersion = "27.0.3"
    androidMinSdkVersion = 21
    androidTargetSdkVersion = 27
    androidCompileSdkVersion = 27

    //Libraries
    androidAnnotationsVersion = '27.1.1'
    constraintLayoutVersion = '1.1.2'
    daggerVersion = '2.17'
    javaxAnnotationVersion = '1.0'
    javaxInjectVersion = '1'
    glassfishAnnotationVersion = '3.1.1'
    glideVersion = '4.8.0'
    gsonRetrofitVersion = '2.4.0'
    gsonGoogleVersion = '2.8.5'
    kotlinVersion = '1.2.61'
    okHttpVersion = '3.11.0'
    retrofitVersion = '2.4.0'
    robolectricVersion = '3.8'
    roomVersion = '1.1.0'
    rxAndroidVersion = '2.1.0'
    rxJavaVersion = '2.0.2'
    rxKotlinVersion = '2.1.0'
    supportAppCompatVersion = '27.1.1'
    supportLibraryVersion = '27.1.1'
    timberVersion = '4.7.1'

    // Testing
    androidTestRunnerVersion = '1.0.2'
    androidSupportRulesVersion = '1.0.2'
    androidSupportRunnerVersion = '1.0.2'
    assertJVersion = '3.11.0'
    espressoCoreVersion = '3.0.2'
    espressoVersion = '3.0.2'
    junitVersion = '4.12'
    mockitoAndroidVersion = '2.21.0'
    mockitoKotlinVersion = '1.5.0'
    mockitoVersion = '1.9.5'
    runnerVersion = '1.0.2'

    appDependencies = [
            daggerCompiler:     "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:             "com.google.dagger:dagger:${daggerVersion}",
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            rxAndroid:          "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            glide:              "com.github.bumptech.glide:glide:${glideVersion}",
            glideCompiler:      "com.github.bumptech.glide:compiler:${glideVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${supportLibraryVersion}",
            androidSupportV4:   "com.android.support:support-v4:${supportLibraryVersion}",
            androidSupportV13:  "com.android.support:support-v13:${supportLibraryVersion}",
            appCompatV7:        "com.android.support:appcompat-v7:${supportLibraryVersion}",
            supportRecyclerView:"com.android.support:recyclerview-v7:${supportLibraryVersion}",
            supportDesign:      "com.android.support:design:${supportLibraryVersion}",
            timber:             "com.jakewharton.timber:timber:${timberVersion}",
            daggerSupport:      "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerProcessor:    "com.google.dagger:dagger-android-processor:${daggerVersion}",
            glassfishAnnotation: "org.glassfish:javax.annotation:${glassfishAnnotationVersion}",
            constraintLayout:    "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}",
            cardViewV7:         "com.android.support:cardview-v7:${supportLibraryVersion}"
    ]

    appTestDependencies = [
            junit:              "junit:junit:${junitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            supportRunner:      "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules:       "com.android.support.test:rules:${androidSupportRulesVersion}",
            mockitoAndroid:     "org.mockito:mockito-android:${mockitoAndroidVersion}",
            espressoCore:       "com.android.support.test.espresso:espresso-core:${espressoVersion}",
            espressoIntents:    "com.android.support.test.espresso:espresso-intents:${espressoVersion}",
            espressoContrib:    "com.android.support.test.espresso:espresso-contrib:${espressoVersion}",
            androidRunner:      "com.android.support.test:runner:${runnerVersion}",
            androidRules:       "com.android.support.test:rules:${runnerVersion}"
    ]

    cacheDependencies = [
            daggerCompiler:     "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:             "com.google.dagger:dagger:${daggerVersion}",
            gson:               "com.google.code.gson:gson:${gsonGoogleVersion}",
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            roomRuntime:        "android.arch.persistence.room:runtime:${roomVersion}",
            roomCompiler:       "android.arch.persistence.room:compiler:${roomVersion}",
            roomRxJava:         "android.arch.persistence.room:rxjava2:${roomVersion}",
    ]

    cacheTestDependencies = [
            junit:              "junit:junit:${junitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric:        "org.robolectric:robolectric:${robolectricVersion}",
            roomTesting:        "android.arch.persistence.room:testing:${roomVersion}",
            archTesting:        "android.arch.core:core-testing:${roomVersion}",
            supportRunner:      "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules:       "com.android.support.test:rules:${androidSupportRulesVersion}"
    ]

    dataDependencies = [
            daggerCompiler:                         "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:                                 "com.google.dagger:dagger:${daggerVersion}",
            okHttp:                                 "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger:                           "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            gson:                                   "com.google.code.gson:gson:${gsonGoogleVersion}",
            rxKotlin:                               "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:                                 "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            rxAndroid:                              "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation:                        "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:                            "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations:                     "com.android.support:support-annotations:${androidAnnotationsVersion}",
            retrofit:                               "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter:                      "com.squareup.retrofit2:converter-gson:${gsonRetrofitVersion}",
            retrofitAdapter:                        "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    ]

    dataTestDependencies = [
            junit:                                  "junit:junit:${junitVersion}",
            kotlinJUnit:                            "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:                                "org.assertj:assertj-core:${assertJVersion}",
            mockito:                                "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric:                            "org.robolectric:robolectric:${robolectricVersion}"
    ]

    domainDependencies = [
            kotlin:                                 "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            javaxAnnotation:                        "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:                            "javax.inject:javax.inject:${javaxInjectVersion}",
            rxKotlin:                               "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}"
    ]

    domainTestDependencies = [
            junit:                                  "junit:junit:${junitVersion}",
            assertj:                                "org.assertj:assertj-core:${assertJVersion}",
            mockito:                                "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
    ]

    presentationDependencies = [
            daggerCompiler:     "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:             "com.google.dagger:dagger:${daggerVersion}",
            okHttp:             "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger:       "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            gson:               "com.google.code.gson:gson:${gsonGoogleVersion}",
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            rxAndroid:          "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            retrofit:           "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter:  "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter:    "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    ]

    presentationTestDependencies = [
            junit:              "junit:junit:${junitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric:        "org.robolectric:robolectric:${robolectricVersion}"
    ]

    remoteDependencies = [
            daggerCompiler:                         "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:                                 "com.google.dagger:dagger:${daggerVersion}",
            gson:                                   "com.google.code.gson:gson:${gsonGoogleVersion}",
            rxKotlin:                               "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:                                 "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            javaxAnnotation:                        "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:                            "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations:                     "com.android.support:support-annotations:${androidAnnotationsVersion}",
            okHttp:                                 "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger:                           "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            retrofit:                               "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter:                      "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter:                        "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    ]

    remoteTestDependencies = [
            junit:              "junit:junit:${junitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            supportRunner:      "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules:       "com.android.support.test:rules:${androidSupportRulesVersion}"
    ]
}

